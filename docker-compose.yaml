# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.2'
services:
  cdkproxy:
    build:
      context: ./backend
      dockerfile: docker/dev/Dockerfile
      args:
        CONTAINER_UID: ${UID}
    entrypoint: /bin/bash -c 'aws configure set region "eu-west-1" && . ~/.nvm/nvm.sh && uvicorn cdkproxymain:app --host 0.0.0.0 --port 2805 --reload'
    expose:
      - 2805
    ports:
      - 2805:2805
    depends_on:
      - db
    links:
      - db
    environment:
      envname: 'dkrcompose'
      config_location: "/config.json"
      AWS_REGION: "${AWS_REGION:-eu-west-1}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-eu-west-1}"
    volumes:
      - ./backend/dataall:/dataall
      - $HOME/.aws/credentials:/home/cuser/.aws/credentials:ro
      - $HOME/.aws/config:/home/cuser/.aws/config
      - ./config.json:/config.json
    restart:
      on-failure:60
    platform:
      linux/amd64

  graphql:
    build:
      context: ./backend
      dockerfile: docker/dev/Dockerfile
      args:
        CONTAINER_UID: ${UID}
    entrypoint: /bin/bash -c "../build/wait-for-it.sh elasticsearch:9200 -t 30 && uvicorn local_graphql_server:app --host 0.0.0.0 --port 5000 --reload"
    expose:
      - 5000
    ports:
      - 5000:5000
    environment:
      envname: 'dkrcompose'
      config_location: "/config.json"
      AWS_REGION: "${AWS_REGION:-eu-west-1}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-eu-west-1}"
      email_sender_id: "noreply@someawsdomain"
    volumes:
      - ./backend/dataall:/dataall
      - $HOME/.aws/credentials:/home/cuser/.aws/credentials:ro
      - ./config.json:/config.json
    depends_on:
      - db
      - elasticsearch
      - cdkproxy
    links:
      - db
      - elasticsearch
      - cdkproxy
    restart:
      on-failure:60

  db:
    build:
      context: compose/postgres
    environment:
      POSTGRES_DB: 'dataall'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'docker'
    expose:
    - 5432
    ports:
      - 5432:5432
    volumes:
      - type: volume
        target: /usr/share/postgresql/data
    restart: always

  elasticsearch:
    build:
      context: compose/elasticsearch
      args:
        ELK_VERSION: 7.9.3
    volumes:
      - type: volume
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    restart:
      on-failure:60

  frontend:
    build:
      context: .
      dockerfile: frontend/docker/dev/Dockerfile
    deploy:
      resources:
        limits:
          memory: 4096M
        reservations:
          memory: 128M
    ports:
      - "8080:80"
